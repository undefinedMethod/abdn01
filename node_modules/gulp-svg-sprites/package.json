{
  "name": "gulp-svg-sprites",
  "description": "Create SVG sprites with PNG fallbacks",
  "version": "0.1.1",
  "homepage": "https://github.com/shakyshane/gulp-svg-sprites",
  "repository": {
    "type": "git",
    "url": "git://github.com/shakyshane/gulp-svg-sprites.git"
  },
  "bugs": {
    "url": "https://github.com/shakyshane/gulp-svg-sprites/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "/blob/master/LICENSE-MIT"
    }
  ],
  "scripts": {
    "test": "gulp lint && mocha --recursive test/specs"
  },
  "main": "index.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "lodash": "^2.4.1",
    "phantomjs": "*",
    "svgo": "*",
    "through2": "^0.4.1",
    "vinyl": "^0.2.3",
    "gulp-util": "^2.2.14",
    "svg2png": "^1.0.1"
  },
  "keywords": [
    "svg",
    "sprites",
    "gulpplugin"
  ],
  "devDependencies": {
    "vinyl-fs": "^0.1.4",
    "gulp": "~3.5.2",
    "mocha": "~1.18.0",
    "gulp-jshint": "~1.4.0",
    "chai": "~1.9.0",
    "sinon": "~1.8.2",
    "gulp-contribs": "0.0.2"
  },
  "readme": "# gulp-svg-sprites [![Build Status](https://travis-ci.org/shakyShane/gulp-svg-sprites.png?branch=master)](https://travis-ci.org/shakyShane/gulp-svg-sprites)\n\nGulp plugin for working with SVGs\n\n**Notice** - This is a new project with a deliberately minimal feature set. If there's something missing that would help you though, post an issue\nand we'll try to get it implemented.\n\n## Usage\nInstall it locally to your project.\n\n`npm install gulp-svg-sprites`\n\n##Screencasts\n1. [Simple usage](http://quick.as/ebeh4va)\n2. [Configuration](http://quick.as/bdpiolw)\n3. [Support for `<defs>` output](http://quick.as/3v0svmo) (as per [Chris Coyiers article](http://css-tricks.com/svg-sprites-use-better-icon-fonts/))\n\n## Example 1 - Sprite Sheet\nThis will take a bunch of SVGs, create a sprite-sheet out of it (in both SVG & PNG) & write all the CSS for you (including `.no-svg` prefixes for the fallback)\n\n```js\nvar gulp = require('gulp');\nvar svgSprites = require('gulp-svg-sprites');\n\nvar svg = svgSprites.svg;\nvar png = svgSprites.png;\n\ngulp.task('sprites', function () {\n    gulp.src('assets/svg/*.svg')\n            .pipe(svg())\n            .pipe(gulp.dest(\"assets\"))\n            .pipe(png())\n});\n```\n\n## Example 2 - using `<defs>`\nAs explained in [this article by Chris Coyier](http://css-tricks.com/svg-sprites-use-better-icon-fonts/), there's an even better way to use SVGs, if you are not concerned with old versions of IE.\nSetting the config option `defs: true` will create the required output for using that technique.\n\n**NOTE:** when using this mode, you cannot generate a PNG fallback from the SVG output. Trying to do so will cause an error.\n\n```\nvar gulp = require('gulp');\nvar svgSprites = require('gulp-svg-sprites');\n\nvar svg = svgSprites.svg;\n\ngulp.task('sprites', function () {\n    gulp.src('assets/svg/*.svg')\n            .pipe(svg({defs: true}))\n            .pipe(gulp.dest(\"assets\"));\n});\n```\n\n\n## Example, with custom class names\n\nYou can pass a config object to the svg function that will allow full control over the resulting CSS.\nFor example, say you wanted all of your CSS classes to have `-icon` suffix, you could do this:\n\n```js\nvar config = {\n    className: \".%f-icon\"\n};\n\ngulp.task('sprites', function () {\n    gulp.src('assets/svg/*.svg')\n            .pipe(svg(config))\n            .pipe(gulp.dest(\"assets\"))\n            .pipe(png())\n});\n```\n\nWhich would create class names like this in the the CSS (where `facebook` was the filename)\n\n```css\n.facebook-icon {\n\t/* css generated here */\n}\n```\n\nIt's the `%f` from `.%f-icon` which gets replaced with the filename of the SVG - This means you can also add prefixes easily as well.\n\n```js\nvar config = {\n    className: \".svg-%f-icon\"\n};\n\ngulp.task('sprites', function () {\n    gulp.src('assets/svg/*.svg')\n            .pipe(svg(config))\n            .pipe(gulp.dest(\"assets\"))\n            .pipe(png())\n});\n```\n\nWhich would create:\n\n```css\n.svg-facebook-icon {\n\t/* css generated here */\n}\n```\n\nYou can also provide a callback function for the class names too. The first argument is the filename, the second is the entire config object\n\n```js\nvar config = {\n    className: function (file, object) {\n        return \".svg-\" + file;\n    }\n};\n\ngulp.task('sprites', function () {\n    gulp.src('assets/svg/*.svg')\n            .pipe(svg(config))\n            .pipe(gulp.dest(\"assets\"))\n            .pipe(png())\n});\n```\n\n\n##Common options\n\n**padding**\n\nAdd some spacing around your sprite sheet items by setting this option\n\n```js\n// Add 5px padding to the sprite sheet\ngulp.task('sprites', function () {\n    gulp.src('assets/svg/*.svg')\n            .pipe(svg({padding: 5))\n            .pipe(gulp.dest(\"assets\"))\n            .pipe(png())\n});\n```\n\n**disabling previews**\n\nDisable the generation of HTML previews\n\n```js\ngulp.task('sprites', function () {\n    gulp.src('assets/svg/*.svg')\n            .pipe(svg({generatePreview: false}))\n            .pipe(gulp.dest(\"assets\"))\n            .pipe(png())\n});\n```\n\nTake a look at [index.js](https://github.com/shakyShane/gulp-svg-sprites/blob/master/index.js#L15) to see which other options you can override.\n\n\n\n\n## Contributors\n\n```\n    44\tShane Osbourne\n     5\tthomaswelton\n     3\tDavid Mair Spiess\n     1\tAlexander Flatscher\n     1\tDavid Blurton\n     1\tThomas Welton\n```\n\n## License\nCopyright (c) 2014 Shane Osbourne\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "gulp-svg-sprites@0.1.1",
  "_shasum": "d1333bf8f5efc6130cfcd382446cff946b139762",
  "_from": "gulp-svg-sprites@",
  "_resolved": "https://registry.npmjs.org/gulp-svg-sprites/-/gulp-svg-sprites-0.1.1.tgz"
}
